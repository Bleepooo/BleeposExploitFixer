package dev.bleepo.bleeposexploitfixer;

import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.ProtocolManager;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Chunk;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.*;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.HashMap;
import java.util.UUID;

public final class Main extends JavaPlugin implements Listener {

    private static Main instance;

    public static Main getInstance() {
        return instance;
    }

    private ProtocolManager protocolManager;
    private final HashMap<UUID, Integer> levernotifier = new HashMap<>();
    private final HashMap<UUID, Integer> leverInteract = new HashMap<>();
    private final HashMap<Chunk, Integer> redstonePerChunk = new HashMap<>();

    private BukkitRunnable runnable;
    private BukkitRunnable notifycleaner;

    @Override
    public void onEnable() {
        //Load Config
        saveDefaultConfig();

        //Clean HashMaps
        leverInteract.clear();
        levernotifier.clear();
        redstonePerChunk.clear();

        //Clean HashMaps Every Second
        runnable = new BukkitRunnable() {
            @Override
            public void run() {
                leverInteract.clear();
                redstonePerChunk.clear();
            }
        };
        runnable.runTaskTimer(this, 20, 20);

        //Clean LeverNotifier Hashmap
        notifycleaner = new BukkitRunnable() {
            @Override
            public void run() {
                levernotifier.clear();
            }
        };
        notifycleaner.runTaskTimer(this, 600, 600);

        if (instance == null) {
            instance = this;
        }

        //Register Events
        getServer().getPluginManager().registerEvents(this, this);
        if (getServer().getPluginManager().getPlugin("ProtocolLib") != null) {
            getLogger().info("Detected ProtocolLib!");
            ProtocolLib.protocolLibWrapper(this);
        } else {
            getLogger().warning("Did not detect ProtocolLib, disabling packet patches. Install ProtocolLib?");
        }

        //Loaded
        getLogger().info(ChatColor.AQUA + "[BleeposExploitFixer]" + ChatColor.GREEN + " is Loaded and Enabled!");
    }

    @Override
    public void onDisable() {
        instance = null;
        getLogger().info(ChatColor.AQUA + "[BleeposExploitFixer]" + ChatColor.RED + " is Unloaded and Disabled!");
    }

    //Redstone Patches
    @EventHandler
    public void onPistonExtend(BlockPistonExtendEvent e) {
        onPistonEvent(e);
    }

    @EventHandler
    public void onPistonRetract(BlockPistonRetractEvent e) {
        onPistonEvent(e);
    }

    @EventHandler
    public void onRedstoneEvent(BlockRedstoneEvent e) {
        redstonePerChunk.put(e.getBlock().getChunk(), redstonePerChunk.computeIfAbsent(e.getBlock().getChunk(), a -> 0) +1);
        if (redstonePerChunk.get(e.getBlock().getChunk()) > 150) {
            e.setNewCurrent(0);
        }
    }

    @EventHandler
    public void onDispenseEvent(BlockDispenseEvent e) {
        redstonePerChunk.put(e.getBlock().getChunk(), redstonePerChunk.computeIfAbsent(e.getBlock().getChunk(), a -> 0) +1);
        if (redstonePerChunk.get(e.getBlock().getChunk()) > 150) {
            e.setCancelled(true);
        }
    }

    public void onPistonEvent(final BlockPistonEvent e) {
        redstonePerChunk.put(e.getBlock().getChunk(), redstonePerChunk.computeIfAbsent(e.getBlock().getChunk(), a -> 0) +1);
        if (redstonePerChunk.get(e.getBlock().getChunk()) > 150) {
            e.setCancelled(true);
        }
    }

    //Lever Patch
    @EventHandler
    public void onPlayerInteract(final PlayerInteractEvent e) {
        leverInteract.put(e.getPlayer().getUniqueId(), leverInteract.computeIfAbsent(e.getPlayer().getUniqueId(), a -> 0) +1);
        levernotifier.put(e.getPlayer().getUniqueId(), levernotifier.computeIfAbsent(e.getPlayer().getUniqueId(), a -> 0) +1);
        if (e.getAction().equals(Action.RIGHT_CLICK_BLOCK) && e.getClickedBlock().getType() == Material.LEVER) {
            if (leverInteract.get(e.getPlayer().getUniqueId()) > this.getConfig().getInt("leverspam")) {
                for(Player player : Bukkit.getOnlinePlayers())
                    if(player.isOp()) {
                        if(levernotifier.get(e.getPlayer().getUniqueId()) >= this.getConfig().getInt("leverspam") && levernotifier.get(e.getPlayer().getUniqueId()) < this.getConfig().getInt("leverspam") + 2) {
                            player.sendMessage(ChatColor.GOLD + "[" + ChatColor.AQUA + "BleeposExploitFixer" + ChatColor.GOLD + "] " + ChatColor.DARK_RED + e.getPlayer().getDisplayName() + ChatColor.GOLD + " is spamming levers!");
                        }
                    }
                e.getPlayer().sendMessage(ChatColor.GOLD + "Please don't spam levers!");
                e.setCancelled(true);
            }
        }
    }
}
